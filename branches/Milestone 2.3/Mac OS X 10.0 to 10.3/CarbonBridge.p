unit CarbonBridge;interface	uses	Controls, Dialogs, Fonts, Lists, TextEdit, Menus, Packages, Processes, 	Memory, Strings, Resources, QuickDraw, Resources, SegLoad, TextEdit,	ToolUtils, Windows, Scrap, Script, Printing;		type 	tWindowPeek=record	port:GrafPtr;	windowKind:integer;	visible:boolean;	hilited:boolean;	goAwayFlag:boolean;	spareFlag:boolean;	strucRgn:RgnHandle;	contRgn:RgnHandle;	updateRgn:RgnHandle;	windowDefProc:Handle;	dataHandle:Handle;	titleHandle:StringHandle;	titleWidth:integer;	controlList:ControlHandle;	windowPic:PicHandle;	refCon:integer;	end;	windowPeekPtr = ^tWindowPeek;procedure IUDateString(rawSecs:SInt32; format:DateForm; var resultStr:Str255);function OpenDeskAcc(accName:Str255):integer;function PutScrap(length:SInt32; theType:string; Result:Ptr):OSErr;function SystemEdit(theItem:integer):boolean;procedure SystemClick(theEvent:EventRecord;theWindow:WindowPtr);function GetMHandle(theMenu:integer):MenuHandle;procedure GetItem(theMenu:MenuHandle;whichItem:integer;var itemString:Str255);procedure DisableItem(theMenu:MenuHandle; whichItem:integer);procedure EnableItem(theMenu:MenuHandle; whichItem:integer);function WindowPeek(theWindow:WindowPtr): WindowPeekPtr;function NewAEEventHandlerProc(theHandlerPtr: AEEventHandlerProcPtr):AEEventHandlerUPP;procedure SystemTask;function ZeroScrap:OSErr;function HiWord(theNumber:longint):integer;function LoWord(theNumber:longint):integer;implementationprocedure IUDateString(rawSecs:SInt32; format:DateForm; var resultStr:Str255);beginresultStr:='';end;function OpenDeskAcc(accName:Str255):integer;beginOpenDeskAcc:=0end;function PutScrap(length:SInt32; theType:string; Result:Ptr):OSErr;var	theScrap:ScrapRef;	theErr:OSErr;	theFlags:ScrapFlavorFlags;begin	theErr:=GetCurrentScrap(theScrap);	if theErr=noErr then		if theType='TEXT' then			theErr:=PutScrapFlavor(theScrap,'TEXT',kScrapFlavorMaskNone,length,Result);	PutScrap:=theErr;end;function SystemEdit(theItem:integer):boolean;beginSystemEdit:=false;end;procedure SystemClick(theEvent:EventRecord;theWindow:WindowPtr);beginend;function GetMHandle(theMenu:integer):MenuHandle;begin  GetMhandle:=GetMenuHandle(theMenu);end;procedure GetItem(theMenu:MenuHandle;whichItem:integer;var itemString:Str255);beginGetMenuItemText(theMenu,whichItem,itemString);end;procedure DisableItem(theMenu:MenuHandle; whichItem:integer);beginDisableMenuItem(theMenu,whichItem);end;procedure EnableItem(theMenu:MenuHandle; whichItem:integer);beginEnableMenuItem(theMenu,whichItem);end;function WindowPeek(theWindow:WindowPtr): WindowPeekPtr;var	theString:Str255;	theHandle:Handle;	theErr:OSErr;begin	with WindowPeekPtr(theWindow)^ do	begin	 	port:=GetWindowPort(theWindow);		WindowKind:=GetWindowKind(theWindow);		visible:=IsWindowVisible(theWindow);		hilited:=IsWindowHilited(theWindow);		theErr:=GetWindowRegion(theWindow,kWindowStructureRgn,strucRgn);		theErr:=GetWindowRegion(theWindow,kWindowContentRgn,contRgn);		GetWTitle(theWindow,theString);		theErr:=PtrToHand(@theString,theHandle,length(theString));		if theErr=noErr then begin			titleHandle:=StringHandle(theHandle);			titleWidth:=StringWidth(theString);		end;		theErr:=GetRootControl(theWindow,controlList);		windowPic:=GetWindowPic(theWindow);		refCon:=GetWRefCon(theWindow);	end;end;function NewAEEventHandlerProc(theHandlerPtr: AEEventHandlerProcPtr):AEEventHandlerUPP;beginNewAEEventHandlerProc:=NewAEEventHandlerUPP(theHandlerPtr);end;procedure SystemTask;beginend;function ZeroScrap:OSErr;beginZeroScrap:=ClearCurrentScrap;end;function HiWord(theNumber:longint):integer;begin	HiWord:=HiWrd(theNumber);end;function LoWord(theNumber:longint):integer;begin	LoWord:=LoWrd(theNumber);end;end.